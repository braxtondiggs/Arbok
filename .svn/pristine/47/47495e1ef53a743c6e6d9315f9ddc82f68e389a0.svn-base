// set variables for environment
var express = require('express'),
  app = express(),
  mysql      = require('mysql');

// Set server port
app.listen(4000);
console.log('server is running');

var SpotifyWebApi = require('spotify-web-api-node');

// credentials are optional
var spotifyApi = new SpotifyWebApi({
  clientId : 'fcecfc72172e4cd267473117a17cbd4d',
  clientSecret : 'a6338157c9bb5ac9c71924cb2940e1a7',
  redirectUri : 'http://www.example.com/callback'
});

var connection = mysql.createConnection({
  host     : 'localhost',
  user     : 'root',
  password : 'root',
  port     : 8889,
  database : 'cymbitco_quilava'
});
    
app.get('/search', function(req, res) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "X-Requested-With");
  
  var v = req.query['v'];
  spotifyApi.searchTracks(v).then(function(data) {
    res.setHeader('Content-Type', 'application/json');
    res.end(JSON.stringify(data));
  }, function(err) {
    console.error(err);
  });

});

app.get('/server', function(req, res) {
  connection.connect(function(err) {
    if (err) {
      console.error('error connecting: ' + err.stack);
      return;
    }
  
    console.log('connected as id ' + connection.threadId);
  });
  connection.query('SELECT * FROM jukebox_locations', function(err, rows, fields) {
    if (err) throw err;
  
    console.log('The solution is: ', rows[0].lat);
      //connection.end();
      res.end();
});

  });

app.use(function(req, res, next) {//catch 404
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});


// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
    app.use(function(err, req, res, next) {
        res.status(err.status || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {}
    });
});
function requestHandler(request, response) {
  response.writeHead(200, {"Content-Type": "text/html"});
}