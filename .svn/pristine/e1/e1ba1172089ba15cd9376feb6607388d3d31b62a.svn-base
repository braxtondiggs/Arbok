$(function() {
    $("#chat-menu").mmenu();
    $('#albums').isotope({
            itemSelector: 'li',
            masonry: {
                isFitWidth: true,
                columnWidth: 150
            }
        })

    $('header').on('click', function() {
        $("#chat-menu").trigger("open.mm");console.log('some');
    });
    
    $('#pick-song').on('click', function() {
       showAlbum();
    });
    
    if(window.location.hash) {
      var hash = window.location.hash.substring(1); //Puts hash in variable, and removes the # character
      if (hash == "album") {
        showAlbum();
      }
    }
});

document.addEventListener("deviceready", onDeviceReady, false);
document.addEventListener("offline", onOffline, false);

        // device APIs are available
        //
        function onDeviceReady() {
            checkConnection();

        }
        
function onFileSystemSuccess(fileSystem) {
    //fileSystem.root.getDirectory(".myapp", {create: false, exclusive: false}, getDirSuccess, fail);
    var directoryReader = fileSystem.root.createReader();
    
     directoryReader.readEntries(readerSuccess,fail);
}

function getDirSuccess(dirEntry) {
    // Get a directory reader
    var directoryReader = dirEntry.createReader();

    // Get a list of all the entries in the directory
    directoryReader.readEntries(function (entries) {
                   var appFile;
                   var extension;
                   var recursive = true;
                   for (var i = 0; i < entries.length; i++) {
                    
                    extension = entries[i].name.substr(entries[i].name.lastIndexOf('.'));
                    if (entries[i].isDirectory === true && recursive === true) {
                       //Application.collectMedia(entries[i].fullPath, recursive, level + 1);
                    }
                    else if (entries[i].isFile === true && $.inArray(extension, pS) >= 0)
                    {
                       //appFile = new AppFile(entries[i].name, entries[i].fullPath);
                       //appFile.addFile();
                       console.log('File saved: ' + entries[i].fullPath);
                    }
            }
            
        }, function(evt){ // error get file system
            console.log("File System Error: "+evt.target.error.code);
        });
}

function readerSuccess(entries) {
    var i;
    for (i=0; i<entries.length; i++) {
        // Assuming everything in the Music directory is an mp3, go nuts
        // otherwise check entries[i].name to see if it ends with .mp3
        console.log(entries[i].name);
    }
}

function fail(error) {
    alert("Failed to list directory contents: " + error.code);
}
function showAlbum() {
    $('#homepage').hide();
    $('#album-list').show();
    $('header').text("QBox");
    /*
    window.requestFileSystem(LocalFileSystem.PERSISTENT, 0,
        function(fileSystem){ // success get file system

            var root = fileSystem.root;
            var path = root.fullPath;
            var directoryEntry = new DirectoryEntry('', path);
            var directoryReader = directoryEntry.createReader();
            var p =  ['.mp3', '.wav', '.m4a'];
            
            directoryReader.readEntries(
                function (entries) {
                   var appFile;
                   var extension;
                   var recursive = true;
                   for (var i = 0; i < entries.length; i++) {
                    
                    extension = entries[i].name.substr(entries[i].name.lastIndexOf('.'));
                    if (entries[i].isDirectory === true && recursive === true) {
                       //Application.collectMedia(entries[i].fullPath, recursive, level + 1);
                    }
                    else if (entries[i].isFile === true && $.inArray(extension, pS) >= 0)
                    {
                       appFile = new AppFile(entries[i].name, entries[i].fullPath);
                       appFile.addFile();
                       console.log('File saved: ' + entries[i].fullPath);
                    }
            }
            
        }, function(evt){ // error get file system
            console.log("File System Error: "+evt.target.error.code);
        });
        });*/
    
    window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, onFileSystemSuccess, fail);
    
}

function CollectMedia() {
    
    
}


function checkConnection() {
    var networkState = navigator.network.connection.type;

    var states = {};
    states[Connection.UNKNOWN]  = 'Unknown connection';
    states[Connection.ETHERNET] = 'Ethernet connection';
    states[Connection.WIFI]     = 'WiFi connection';
    states[Connection.CELL_2G]  = 'Cell 2G connection';
    states[Connection.CELL_3G]  = 'Cell 3G connection';
    states[Connection.CELL_4G]  = 'Cell 4G connection';
    states[Connection.NONE]     = 'No network connection';

    //alert('Connection type: ' + states[networkState]);
}
 
 
function onOffline() {
   // Handle the offline event
}